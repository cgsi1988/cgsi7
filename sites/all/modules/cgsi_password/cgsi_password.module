<?php
// $Id:

/**
 * @file cgsi_password.module
 * Implements a system for users to reset their accounts password/e-mail
 * by knowing their CGSI member number, and full name.
 */

/**
 * Implementation of hook_form_alter().
 */
function cgsi_password_form_alter(&$form, $form_state, $form_id) {
	$formid = $form_id;
	switch ($form_id) {
		case 'user_login':
			// Modifications to the user login form.
			$form['info'] = array(
			'#type' => 'markup',
			'#markup' => t('<p>If you do not know your username and password you can reset them !here.</p>', array('!here' => l('here', 'user/password'))),
			'#prefix' => '<div>',
			'#suffix' => '</div>',
			'#weight' => 20,
			);
			break;
		case 'user_pass':
			// Modifications to the user password reset form.

			// Set the form validation handler to our function and we'll delegate as needed.
			$form['#validate'] = array('cgsi_password_pass_validate');

			$form['password_reset'] = array(
					'#type' => 'fieldset',
					'#title' => t('Password reset'),
					'#description' => t('If you already know your username or the e-mail address of your account you can enter that below and we will e-mail you a new password.'),
			);
			// Move name field into new fieldset
			$form['password_reset']['name'] = $form['name'];
			unset($form['password_reset']['name']['#required']);
			unset($form['name']);
			// Move submit button into new fieldset
			$form['password_reset']['submit'] = $form['submit'];
			unset($form['submit']);

			$form['password_lookup'] = array(
					'#type' => 'fieldset',
					'#title' => t('Password lookup'),
					'#description' => t('If you do not know your username or e-mail address please enter your CGSI member number and name below. We will then attempt to lookup your account so you can verify your e-mail address. Once your e-mail address has been verified we can e-mail you your username and a new password.'),
			);
			$form['password_lookup']['cgsi_member_number'] = array(
					'#type' => 'textfield',
					'#title' => t('CGSI Member Number'),
					'#size' => 10,
			);
			$form['password_lookup']['cgsi_first_name'] = array(
					'#type' => 'textfield',
					'#title' => t('First Name'),
					'#size' => 40,
			);
			$form['password_lookup']['cgsi_last_name'] = array(
					'#type' => 'textfield',
					'#title' => t('Last Name'),
					'#size' => 40,
			);
			$form['password_lookup']['submit_lookup'] = array(
					'#type' => 'submit',
					'#value' => t('Lookup'),
					'#submit' => array('cgsi_password_submit'),
			);
			break;
	}
}

function cgsi_password_pass_validate($form, &$form_state) {
	// If op is set to Lookup the user clicked the submit button provided
	// by this module. Otherwise, they clicked the "Email password" submit
	// button and we should igonore this request.
	if ($form_state['values']['op'] == 'Lookup') {
		// Make sure they have supplied the necessary information.
		// Member number
		if (empty($form_state['values']['cgsi_member_number'])) {
			form_set_error('cgsi_member_number', t('Please enter your CGSI member number.'));
		}
		// First name
		if (empty($form_state['values']['cgsi_first_name'])) {
			form_set_error('cgsi_first_name', t('Please enter your first name.'));
		}
		// Last name
		if (empty($form_state['values']['cgsi_last_name'])) {
			form_set_error('cgsi_last_name', t('Please enter your last name.'));
		}
	}
	else {
		user_pass_validate($form, $form_state);
	}
}

/**
 * Submit callback for the Lookup button added by this module to the user_pass
 * form.
 *
 * Attempt to lookup a user account based on information provided  on user_pass
 * form. If success, present the user with a form to reset the e-mail address
 * associated with the account we found. If failure, send user back to password
 * reset page.
 */
function cgsi_password_submit($form, &$form_state) {
	$uid = db_query('SELECT pv.uid FROM {profile_value} pv INNER JOIN {profile_value} pv1 ON pv1.uid=pv.uid INNER JOIN {profile_value} pv2 ON pv2.uid=pv.uid WHERE pv1.fid=1 AND pv1.value="%s" AND pv2.fid=2 AND pv2.value="%s" AND pv.fid=11 AND pv.value=%d LIMIT 1', $form_state['values']['cgsi_first_name'], $form_state['values']['cgsi_last_name'], $form_state['values']['cgsi_member_number'])->fetchField();

	if ($uid) {
		// We have a positive match, log the user in and take them to their account page so they can
		// reset information.
		$account = user_load($uid);
		// In order to log the user in, but NOT call hook_login we have to do it manually.
		// Calling hook login may cause the user to be redirect somewhere else that we
		// do NOT want them to go.
		global $user;
		$user = $account;
		// Log this login action
		$user->login = time();
		db_query("UPDATE {users} SET login = %d WHERE uid = %d", $user->login, $user->uid);
		watchdog('user', 'Session opened for %name. Via alternate password reset form.', array('%name' => $user->name));
		// Prevent session fixation attacks.
		sess_regenerate();
		drupal_set_message(t('Your account was found and you have been logged in. Please enter a valid e-mail address and a new password below.'));
		$form_state['redirect'] = 'user/'. $uid .'/edit';
	}
	else {
		drupal_set_message(t('Sorry, there is not account that matches your query.'), 'error');
		$form_state['redirect'] = 'user/password';
	}
}
